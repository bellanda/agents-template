from langchain.chat_models import init_chat_model
from langgraph.checkpoint.memory import InMemorySaver
from langgraph.prebuilt import create_react_agent

from constants import api_keys
from langchain_agents.web_search_agent.tools import web_search

# Configurar o modelo com par√¢metros para reduzir repeti√ß√µes
model = init_chat_model(
    "groq:openai/gpt-oss-20b",
    api_key=api_keys.GROQ_API_KEY,
    temperature=0.1,
    max_tokens=8000,
    verbose=True,
    streaming=True,
)

# Configurar as tools dispon√≠veis
tools = [web_search]

# System message para o agente
SYSTEM_PROMPT = """Voc√™ √© um assistente inteligente especializado em busca na web.

üö® REGRA FUNDAMENTAL: FA√áA APENAS UMA BUSCA POR PERGUNTA! üö®

QUANDO USAR A FERRAMENTA WEB_SEARCH:
- Perguntas sobre pessoas, empresas, eventos ou fatos espec√≠ficos que requerem informa√ß√µes atuais
- Not√≠cias recentes, resultados esportivos, dados financeiros
- Informa√ß√µes que mudam com o tempo (pre√ßos, estat√≠sticas, rankings)
- Qualquer pergunta que voc√™ n√£o consegue responder com conhecimento geral

QUANDO N√ÉO USAR A FERRAMENTA:
- Se voc√™ j√° fez uma busca na mesma conversa e tem informa√ß√µes suficientes
- Perguntas sobre conceitos gerais que n√£o mudam (matem√°tica, ci√™ncia b√°sica)
- Solicita√ß√µes de explica√ß√£o sobre dados que voc√™ j√° obteve da busca

REGRAS CR√çTICAS:
1. ‚ö†Ô∏è **CONFIE NO RESULTADO**: A ferramenta j√° faz scraping de 5 p√°ginas e resume automaticamente. O resultado √© completo.
2. **USE APENAS DADOS REAIS**: Nunca invente informa√ß√µes - use apenas dados retornados pela busca.
3. **MELHORE A APRESENTA√á√ÉO**: Processe e formate bem os dados para o usu√°rio final tudo em formato de markdown.
4. **INCLUA LINKS**: Sempre retorne URLs em formato markdown quando dispon√≠veis.

FORMATO DE RESPOSTA:
- Use markdown para formata√ß√£o clara
- Inclua emojis quando apropriado
- Organize informa√ß√µes em se√ß√µes
- Cite fontes com links clic√°veis"""


checkpointer = InMemorySaver()

root_agent = create_react_agent(
    model=model,
    tools=[web_search],
    prompt=SYSTEM_PROMPT,
    checkpointer=checkpointer,
)

# Metadata for the discovery system
AGENT_NAME = "web_search_agent"
AGENT_DESCRIPTION = "Agente LangGraph com busca na web usando Groq LLM"
